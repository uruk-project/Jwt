variables:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  CI_BUILD_NUMBER: $(Build.BuildId)
  BRANCH_NAME: $(Build.SourceBranchName)
  TAG_NAME: $(Build.SourceBranchName)
  SDK_VERSION: 3.0.100-rc1-014190
  FORCE_BENCHMARKS: $(ForceBenchmarks)

trigger:
  branches:
    include:
    - master
    - refs/tags/*
  paths:
    exclude:
    - readme.md

jobs:
  - template: jobs/build.yml
    parameters:
      name: linux
      vmImage: 'ubuntu-16.04'

  - template: jobs/build.yml
    parameters:
      name: windows
      vmImage: 'windows-2019'

  - template: jobs/build.yml
    parameters:
      name: mac
      vmImage: 'macOS-10.14'

  - job: deploy
    dependsOn:
      - linux
      - windows
      - mac
    pool:
      vmImage: 'windows-2019'
    condition: and( succeeded(), startsWith( variables['Build.SourceBranch'], 'refs/tags' ) )
    steps:
      - task: DownloadBuildArtifacts@0
        inputs:
          buildType: current
          artifactName: 'NuGet-Packed'
          downloadPath: .

      # Hack for file not found when using ./build.sh deploy
      # With ls -la the files are listed, but can't be found anyway.
      # I tried quite a lot, relative and absolute path, nothing worked.
      # This hack does the job.
      - bash: |
          echo "-------------------------------------------------"
          echo "Nuget-Packed:"
          ls -la "NuGet-Packed"
            mkdir deploy_nuget
            for package in NuGet-Packed/*.nupkg; do
                mv $package deploy_nuget
            done
          echo "-------------------------------------------------"
          echo "nuget:"
          ls -la deploy_nuget
          echo "-------------------------------------------------"
        displayName: 'deploy to nuget'

      - task: NuGetCommand@2
        inputs:
          command: push
          packagesToPush: deploy_nuget/*.nupkg
          nuGetFeedType: external
          publishFeedCredentials: 'NugetFeed'
        displayName: deploy_nuget

  - template: jobs/benchmarks.yml
    parameters:
      name: benchmarks_linux
      vmImage: 'ubuntu-16.04'
      dependsOn: linux

  - template: jobs/benchmarks.yml
    parameters:
      name: benchmarks_windows
      vmImage: 'windows-2019'
      dependsOn: windows

  - template: jobs/benchmarks.yml
    parameters:
      name: benchmarks_mac
      vmImage: 'macOS-10.14'
      dependsOn: mac
