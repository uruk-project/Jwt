parameters:
  name: ''
  vmImage: ''
  dependsOn: ''

jobs:
  - job: ${{ parameters.name }}
    dependsOn:
      - ${{ parameters.dependsOn }}
    condition: and( succeeded(), eq( variables['Build.SourceBranch'], 'refs/heads/master' ) )
    pool:
      vmImage: ${{ parameters.vmImage }}
    timeoutInMinutes: 240
    steps:
      - task: DotNetCoreInstaller@2
        inputs:
          packageType: sdk
          version: $(SDK_VERSION)

      - bash: dotnet --list-sdks

      - task: DotNetCoreCLI@2
        inputs:
          command: run
          projects: '**/*Benchmarks/*.csproj'
          arguments: '-p perf/Benchmarks/Benchmarks.csproj -c Release -f netcoreapp3.1 -- --filter *ValidateSignedTokenBenchmark* *ValidateCompressedTokenBenchmark* *ValidateEncryptedTokenBenchmark* *ValidateInvalidTokenBenchmark*'
        displayName: Run JWT validation libraries comparison benchmarks

      - task: DotNetCoreCLI@2
        inputs:
          command: run
          projects: '**/*Benchmarks/*.csproj'
          arguments: '-p perf/Benchmarks/Benchmarks.csproj -c Release -f netcoreapp3.1 -- --filter *WriteSignedTokenBenchmark* *WriteEncryptedTokenBenchmark* *WriteCompressedTokenBenchmark*'
        displayName: Run JWT creation libraries comparison benchmarks
        
      - task: PublishBuildArtifacts@1
        inputs:
          pathtoPublish: 'BenchmarkDotNet.Artifacts/results'
          artifactName: '${{ parameters.name }}'
