parameters:
  name: ''
  vmImage: ''
  dependsOn: ''

jobs:
  - job: ${{ parameters.name }}
    dependsOn:
      - ${{ parameters.dependsOn }}
#    condition: and( succeeded(), eq( variables['Build.SourceBranch'], 'refs/heads/master' ) )
    pool:
      vmImage: ${{ parameters.vmImage }}
    timeoutInMinutes: 90
    steps:
      - task: DotNetCoreInstaller@0
        inputs:
          packageType: sdk
          version: 2.2.101

      - task: DotNetCoreInstaller@0
        inputs:
          packageType: sdk
          version: $(SDK_VERSION)

#      - task: DotNetCoreInstaller@0
#        inputs:
#          packageType: sdk
#          version: $(SDK_VERSION)

      - bash: ls -l

      - bash: dotnet --list-sdks

      - task: DotNetCoreCLI@2
        inputs:
          command: run
          projects: '**/*Benchmarks/*.csproj'
          arguments: '-p perf/Benchmarks/Benchmarks.csproj -c Release -f netcoreapp3.0 -- --filter *JwsBenchmark*'
        displayName: Run benchmarks

      - task: PublishBuildArtifacts@1
        inputs:
          pathtoPublish: 'perf/Benchmarks/bin/Release/netcoreapp3.0/BenchmarkDotNet.Artifacts/results'
          artifactName: '${{ parameters.name }}'

      - bash: |
          ls -l
          ls -l perf
          ls -l perf/Benchmarks
          ls -l perf/Benchmarks/bin
          ls -l perf/Benchmarks/bin/Release
          ls -l perf/Benchmarks/bin/Release/netcoreapp3.0
          ls -l perf/Benchmarks/bin/Release/netcoreapp3.0/BenchmarkDotNet.Artifacts
          ls -l perf/Benchmarks/bin/Release/netcoreapp3.0/BenchmarkDotNet.Artifacts/results